__build:

include $(obj)/Makefile

LINUXINCLUDE	+= -I $(srctree)/$(obj) -I $(objtree)/$(obj)

basetarget = $(basename $(notdir $@))
c_flags        = $(LINUXINCLUDE) $(KBUILD_CFLAGS) $(CFLAGS_$(basetarget).o) \
		-DKBUILD_MODFILE='"$(addprefix $(obj)/,$(basetarget))"' \
		-DKBUILD_BASENAME='"$(subst -,_,$(basetarget))"' \
		-DKBUILD_MODNAME='"$(subst -,_,$(basetarget))"' \
		-D__KBUILD_MODNAME=kmod_$(subst -,_,$(basetarget))

subdir-ym := $(sort $(patsubst %/,%, $(filter %/, $(obj-y))))

obj-y := $(patsubst %/, %/built-in.a, $(obj-y))

extra-y		:= $(addprefix $(obj)/, $(extra-y))
lib-y		:= $(addprefix $(obj)/, $(lib-y))
obj-y	:= $(addprefix $(obj)/, $(obj-y))
subdir-ym	:= $(addprefix $(obj)/, $(subdir-ym))


$(obj)/%.o: $(obj)/%.c
	@echo "  CC     " $@
	$(Q) $(CC) $(c_flags) -c -o $@ $<

$(obj)/%.o: $(obj)/%.S
	@echo "  AS     " $@
	$(Q) $(CC) $(LINUXINCLUDE) $(KBUILD_CFLAGS) -D__ASSEMBLY__ -c -o $@ $<

$(obj)/%.lds: $(obj)/%.lds.S
	@echo "  LDS    " $@
	$(Q) $(CPP) $(LINUXINCLUDE) -P -Ux86 -D__ASSEMBLY__ -DLINKER_SCRIPT -o $@ $<

$(obj)/built-in.a: $(obj-y)
	@echo "  AR     " $@
	$(Q) echo $(patsubst $(obj)/%, %, $^) | sed -E 's:([^ ]+):$(obj)/\1:g' | xargs $(AR) cDPrST $@

$(obj)/lib.a: $(lib-y)
	@echo "  AR     " $@
	$(Q) $(AR) cDPrsT $@ $^

$(sort $(filter %/built-in.a, $(obj-y))): $(obj)/%/built-in.a: $(obj)/%

targets-for-builtin := $(extra-y) $(obj)/built-in.a
ifneq ($(strip $(lib-y)),)
targets-for-builtin += $(obj)/lib.a
endif
targets += $(targets-for-builtin) $(obj-y) $(lib-y)

__build: $(targets-for-builtin)

$(subdir-ym):
	$(Q) $(MAKE) -f $(srctree)/scripts/Makefile.build obj=$@

obj-dirs := $(sort $(dir $(targets)))
$(shell mkdir -p $(obj-dirs))

.PHONY: $(subdir-ym) FORCE
